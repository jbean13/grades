package pkg1;

import java.util.ArrayList;
import java.util.IntSummaryStatistics;
import java.util.List;
import java.util.Map;
import java.util.Random;
import java.util.Set;
import java.util.TreeMap;
import java.util.stream.Collectors;

public class Grades {
	static final int NUM = 50;
	public static void statistic(List<Integer> grades) {
		Map<String, Long> map1 = grades.stream().parallel()
				.collect(Collectors.groupingBy(g -> {
					if (g > 94) return "A+";
					else if (g > 89) return "A";
					else if (g > 84) return "B+";
					else if (g > 79) return "B";
					else if (g > 74) return "C+";
					else if (g > 69) return "C";
					else return "D";
				}, TreeMap::new, Collectors.counting()
						));
		System.out.println(map1);
		Set<Map.Entry<String, Long>> entries = map1.entrySet();
	
		Map<String, Double> map2 = new TreeMap<>();		
		entries.stream()
			.forEach(e->map2.put(e.getKey(), (double)e.getValue()*100/NUM));
		System.out.println(map2);
		
		IntSummaryStatistics sta = grades.stream()
			.mapToInt(v->v).summaryStatistics();
		System.out.println("max = " + sta.getMax());
		System.out.println("min = " + sta.getMin());
		System.out.println("ave = " + sta.getAverage());
		

	}
	public static void main(String[] args) {
		List<Integer> test1 = new ArrayList<>();
		for (int i=0;i<NUM;i++) {
			test1.add(new Random().nextInt(51) + 50);
		}
		statistic(test1);
	
	}

}

